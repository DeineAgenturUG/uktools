#!/bin/bash

# @author Mustafa Hasturk
# @mail mustafa.hasturk@yandex.com
# @author Caio Oliveira
# @mail caiooliveirafarias0@gmail.com
# @author Christoph Kepler
# @mail development@kepler.international
# @author Usb Key
# @mail usbkey9@gmail.com


if [ -f ./ukupgrade ]; then
	SOURCE="${BASH_SOURCE[0]}"
	while [ -h "$SOURCE" ]; do
		DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
		SOURCE="$(readlink "$SOURCE")"
		[[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
	done
	DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
	cd $DIR
fi

./autoup $$


autoupFile="./autoup.on";
script="$DIR/ukupgrade";
logPath="/var/log/uku.log";
cfgPath="./uku.cfg";
help="Usage: setup [OPTION]...
Create config file based on your chooses

  -rcron,           Remove cron line
";

if [ "$1" = "-rcron" ]; then
	sudo crontab -u root -l | grep -v $logPath | sudo crontab -u root -
	exit;
fi

cat << EOF

UkTools Setup
------------------------------------------

You can use this script as many time as you want
------------------------------------------


EOF

# Kernel URL
read -p "Do you want the Stable Release (if not sure, press y)? (y/n): " -n 1 -s rc
case "$rc" in
	y | Y) echo 'Stable Release'; kernelrc=0 ;;
	n | N) echo 'Release Candidate'; kernelrc=1 ;;
	*) echo 'Bad input. Aborting'; exit ;;
esac

read -p 'Do you want the Generic kernel? (y/n): ' -n 1 -s km
case "$km" in
	y | Y) echo 'Generic'; kernelmode="generic" ;;
	*) echo 'LowLatency'; kernelmode="lowlatency" ;;
esac

read -p 'Do you want to autoremove old kernel? (y/n): ' -n 1 -s arm
case "$arm" in
	y | Y) echo 'Auto Remove'; arm=1 ;;
	*) echo 'Manual Remove'; arm=0 ;;
esac

sudo crontab -u root -l | grep -v $logPath | sudo crontab -u root -

read -p 'Do you want to update the kernel automatically? (y/n): ' -n 1 -s day
case "$day" in
	y | Y) echo 'Cronning'
		cron=1
		date="[\$(date '+\%Y-\%m-\%d \%H:\%M:\%S')]"
		(sudo crontab -u root -l ; echo "0 */2 * * * $script | while IFS= read -r line; do echo \"$date \$line\" ; done >> $logPath 2>&1") | sudo crontab -u root - ;;
	*) echo 'Deleting cron daily'
		cron=0 ;;
esac

read -p 'Do you want to activate code auto update (if not sure, press y)? (y/n): ' -n 1 -s aup
case "$aup" in
	y | Y) echo 'Enable'; touch $autoupFile ;;
	*) echo 'Disable'; if [ -f $autoupFile ]; then rm $autoupFile; fi ;;
esac

if [ -f $cfgPath ]; then rm $cfgPath; fi

echo "kernelrc=$kernelrc" >> $cfgPath;
echo "kernelmode=$kernelmode" >> $cfgPath;
echo "arm=$arm" >> $cfgPath;
echo "cron=$cron" >> $cfgPath;

read -p 'Setup complete. Update the kernel right now? (y/n): ' -n 1 -s now
case "$now" in
	y | Y) echo 'Downloading'; ./ukupgrade ;;
esac

echo
