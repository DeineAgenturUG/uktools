#!/bin/bash

# @author Mustafa Hasturk
# @mail mustafa.hasturk@yandex.com
# @link https://github.com/muhasturk/ukupgrade

echo
echo "Ubuntu Kernel Upgrade"

if ! which lynx > /dev/null; then sudo apt-get install lynx -y; fi

if [ "$(getconf LONG_BIT)" == "64" ]; then arch=amd64; else arch=i386; fi

if [ $(printf "$(wget --version | head -1 | cut -d' ' -f3)\n1.16" | sort -V | head -1) = 1.16 ]; then _PROGRESS_OPT="-q --show-progress"; else _PROGRESS_OPT=""; fi

function download() {
   wget $_PROGRESS_OPT -P /tmp $(lynx -dump -listonly -dont-wrap-pre $kernelURL | grep "$1" | grep "$2" | grep "$arch" | cut -d ' ' -f 4)
   checkdownload=`echo $?`
   if [ "$checkdownload" == "1" ]; then echo "Download failed!"; exit; fi
}

# Kernel URL
read -p "Do you want the latest ReleaseCandidate [RC]? (y/n): " -n 1 -t 10 -s rc
case "$rc" in
   y | Y) echo "$rc - ReleaseCandidate"; kernelURL=$(lynx -dump -nonumbers http://kernel.ubuntu.com/~kernel-ppa/mainline/ | tail -1) ;;
   *) echo "$rc - StableRelease"; kernelURL=$(lynx -dump -nonumbers http://kernel.ubuntu.com/~kernel-ppa/mainline/ | grep -v rc | tail -1) ;;
esac

read -p "Do you want the lowlatency kernel? (y/n): " -n 1 -t 10 -s km
case "$km" in
   y | Y) echo "$km - LowLatency"; kernelmode="lowlatency" ;;
   *) echo "$km - Generic"; kernelmode="generic" ;;
esac

# Download Kernel Header
echo
echo "Downloading the latest $kernelmode kernel header..."
download $km header

# Download Kernel Image
echo
echo "Downloading the latest $kernelmode kernel image..."
download $km image

# Download Shared Kernel Header
echo
echo "Downloading the shared kernel header..."
wget $_PROGRESS_OPT -P /tmp $(lynx -dump -listonly -dont-wrap-pre $kernelURL | grep all | cut -d ' ' -f 4)
checkdownload=`echo $?`
if [ "$checkdownload" == "1" ]; then echo "Download failed!"; exit; fi

# Install Kernel
echo
echo "Installing Linux Kernel..."
sudo dpkg -i /tmp/linux*.deb

echo
echo "Done. We should reboot the machine."
echo "NOTE: LINUX KERNEL 4.0 and post versions support live patching, just not need to reboot"
read -p "Do you want to reboot system now? (y/n): " -n 1 -t 10 -s rs
case "$rs" in
   y | Y) echo "YES, REBOOT THIS NOW!!!"; sleep 2; sudo reboot ;;
   *) echo "NO, STAY THIS WAKE UPED!" ;;
esac

echo "Thanks for using this script!!!"
